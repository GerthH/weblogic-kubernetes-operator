# Copyright (c) 2020, Oracle Corporation and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.
#
# This is an example of how to define a Domain resource.
#
apiVersion: "weblogic.oracle/v7"
kind: Domain
metadata:
  name: @@DOMAIN_UID@@
  namespace: @@DOMAIN_NAMESPACE@@
  labels:
    weblogic.resourceVersion: domain-v2
    weblogic.domainUID: @@DOMAIN_UID@@

spec:
  # The WebLogic Domain Home
  domainHome: /u01/domains/@@DOMAIN_UID@@

  domainHomeSourceType: FromModel

  # The WebLogic Server Docker image that the Operator uses to start the domain
  image: "@@MODEL_IMAGE_NAME@@:@@MODEL_IMAGE_TAG@@"

  # imagePullPolicy defaults to "Always" if image version is :latest
  imagePullPolicy: "IfNotPresent"

  # Identify which Secret contains the credentials for pulling an image
  #imagePullSecrets:
  #- name: regsecret
  
  # Identify which Secret contains the WebLogic Admin credentials 
  webLogicCredentialsSecret: 
    name: @@DOMAIN_UID@@-weblogic-credentials

  # Whether to include the server out file into the pod's stdout, default is true
  includeServerOutInPodLog: true

  # Whether to enable overrding the home directory of your log files
  # logHomeEnabled: false
  # The in-pod location for domain log, server logs, server out, and Node Manager log files
  #logHome: /shared/logs/@@DOMAIN_UID@@
  
  # Set which WebLogic Servers the Operator will start up when it discovers this Domain
  # - "NEVER" will not start any server in the domain
  # - "ADMIN_ONLY" will start up only the administration server (no managed servers will be started)
  # - "IF_NEEDED" will start all non-clustered servers, including the administration server, and clustered servers up to the replica count.
  serverStartPolicy: "IF_NEEDED"

  serverPod:
    # an (optional) list of environment variable to be set on the servers
    env:
    - name: CUSTOM_DOMAIN_NAME
      value: "@@CUSTOM_DOMAIN_NAME@@"
    - name: JAVA_OPTIONS
      value: "-Dweblogic.StdoutDebugEnabled=false"
    - name: USER_MEM_ARGS
      value: "-XX:+UseContainerSupport -Djava.security.egd=file:/dev/./urandom "
    #volumes:
    #- name: weblogic-domain-storage-volume
    #  persistentVolumeClaim:
    #    claimName: @@DOMAIN_UID@@-weblogic-sample-pvc
    #volumeMounts:
    #- mountPath: /shared
    #  name: weblogic-domain-storage-volume

  # adminServer is used to configure the desired behavior for starting the administration server.
  adminServer:
    # serverStartState legal values are "RUNNING" or "ADMIN"
    # "RUNNING" means the listed server will be started up to "RUNNING" mode
    # "ADMIN" means the listed server will be start up to "ADMIN" mode
    serverStartState: "RUNNING"
    # The Admin Server's NodePort or custom T3Channel
    #adminService:
    #  channels:
    #  - channelName: default
    #    nodePort: 30701
    #  - channelName: T3Channel
   
  # The number of managed servers to start for unlisted clusters
  #replicas: 1

  # clusters is used to configure the desired behavior for starting member servers of a cluster.  
  # If you use this entry, then the rules will be applied to ALL servers that are members of the named clusters.
  clusters:
  - clusterName: cluster-1
    serverStartState: "RUNNING"
    replicas: 2

  configuration:

    # Secrets that are referenced by model yaml macros
    
    secrets:
    - @@DOMAIN_UID@@-rcu-access 
    #- @@DOMAIN_UID@@-datasource-secret
    
    # Increase the introspector job active timeout value for JRF use cases
    introspectorJobActiveDeadlineSeconds: 300

    model:

      # Optional configmap for additional models and variable files
      #configMap: @@DOMAIN_UID@@-wdt-config-map

      # Valid wdt domain types are 'WLS', 'JRF', and 'RestrictedJRF'
      domainType: "JRF"

      # All model-in-image domains require a runtimeEncryptionSecret with a 'password' field
      runtimeEncryptionSecret: @@DOMAIN_UID@@-runtime-encryption-secret

    opss:

      # Name of secret with walletPassword for extracting the wallet, used for JRF domains
      walletPasswordSecret: @@DOMAIN_UID@@-opss-wallet-password-secret
      
      # Name of secret with walletFile containing base64 encoded opss wallet, used for JRF domain
      #walletFileSecret: @@DOMAIN_UID@@-opss-walletfile-secret
